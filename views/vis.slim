html
  head
    script crossorigin="anonymous" integrity="sha256-BbhdlvQf/xTY9gja0Dq3HiwQF8LaCRTXxZKRutelT44=" src="https://code.jquery.com/jquery-2.2.4.min.js" 
    script src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.9.1/underscore-min.js" 
    script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.17/d3.min.js" 
    script src="../src/vendor/d3v4.js" 
    javascript:
      function formatType(valueFormat) {
        if (typeof valueFormat != "string") {
          return function (x) {return x}
        }
        let format = ""
        switch (valueFormat.charAt(0)) {
          case '$':
            format += '$'; break
          case '£':
            format += '£'; break
          case '€':
            format += '€'; break
        }
        if (valueFormat.indexOf(',') > -1) {
          format += ','
        }
        splitValueFormat = valueFormat.split(".")
        format += '.'
        format += splitValueFormat.length > 1 ? splitValueFormat[1].length : 0

        switch(valueFormat.slice(-1)) {
          case '%':
            format += '%'; break
          case '0':
            format += 'f'; break
        }
        return d3.format(format)
      }

      function handleErrors(vis, resp, options) {
        function messageFromLimits(min, max, field) {
          let message = "You need " + min
          if (max) {
            message += " to " + max
          }
          message += " " + field
          return message
        }

        if ((resp.fields.pivots.length < options.min_pivots) ||
            (resp.fields.pivots.length > options.max_pivots)) {
          let message
          vis.addError({
            group: "pivot-req",
            title: "Incompatible Pivot Data",
            message: messageFromLimits(options.min_pivots, options.max_pivots, "pivots"),
          });
          return false;
        } else {
          vis.clearErrors("pivot-req");
        }

        if ((resp.fields.dimensions.length < options.min_dimensions) ||
            (resp.fields.dimensions.length > options.max_dimensions)) {
          vis.addError({
            group: "dim-req",
            title: "Incompatible Dimension Data",
            message: messageFromLimits(options.min_dimensions, options.max_dimensions, "dimensions"),
          });
          return false;
        } else {
          vis.clearErrors("dim-req");
        }

        if ((resp.fields.measure_like.length < options.min_measures) ||
            (resp.fields.measure_like.length > options.max_measures)) {
          vis.addError({
            group: "mes-req",
            title: "Incompatible Measure Data",
            message: messageFromLimits(options.min_measures, options.max_measures, "measures"),
          });
          return false;
        } else {
          vis.clearErrors("mes-req");
        }
        return true;
      }

      document.addEventListener('customVisualizationFrameReady', function() {
        var script = document.createElement("script");
        script.async = true;
        script.src = "visualization/get_js";
        script.type="text/javascript"
        console.log("appending script")
        document.head.appendChild(script);
      })
    script src="../node_modules/@looker/sandy/dist/sandy.js"
  body
    #vis
